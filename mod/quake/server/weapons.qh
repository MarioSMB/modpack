#pragma once

int autocvar_sv_cheats;

// laser cannon
.vector old_velocity;

.float lightning_timer;	// Cool down for LG resist effect

.bool elec;
.bool lightningmodel;

const float PARRY_TIME = 0.333;
.float parry_time;
.float parry_cooldown;

.bool axhitme;

.float axe_hit_chain; // number of consecutive axe hits
.float axe_hit_chain_time; // time of last axe hit + combo time
//const float AXE_COMBO_TIME = 0.7; // max time before combo resets

.int NumProximityGrenades;
.entity realowner; // not lost between attacks

.float ammo_lava_nails;
.float ammo_multi_rockets;
.float ammo_plasma;

.bool reflectlightning;
.bool reflectplasma;

.float pulserifle_finished;
.float fireball_finished;
.float aura_finished;

bool W_Parry(entity this, entity targ);

void W_Parry_Trigger(entity this, float parrytime);

void spawn_touchspark(entity this, float damage);

void SpawnDischarge(entity this, float dm);

void SpawnBitSpray(entity this, vector org, vector vel);

void SpawnMeatBounce(entity this, entity targ, float dm);

void spawn_extrablood(entity this, entity targ, float damage);

void gibhim(entity this);

void SuperDamageSound(entity this);

void spike_touch(entity this, entity toucher);

entity launch_spike(entity this, vector org, vector dir);

void T_MissileTouch(entity this, entity toucher);

entity HIP_LaunchLaser(entity this, vector org, vector vec, float light);

void s_explode1(entity this); // TODO: shouldn't be referenced directly!

void SpawnMeatSpray(entity this, vector org, vector vel);

void LightningDamage(vector p1, vector p2, entity from, float damage, int deathtype);

void LightningReflection(vector lstart, entity lsource, float ldamage, int deathtype);

void MakeFlame(entity this, entity toucher);

entity SpawnInternalFire(entity this, entity targ);

void SpawnFireSpark(entity this);

void SpawnBlood(vector org, vector vel, float damage, entity targ);

void BecomeBloodSpurt(entity this, float dm);

void BecomePurpleExplosion(entity this, entity directhitentity, float dm);

void FireBullets(entity this, int shotcount, vector org, vector dir, vector spread, int deathtype);

void ProximityGrenadeExplode(entity this, entity inflictor, entity attacker, int deathtype);

void ProximityGrenadeTouch(entity this, entity toucher);

void ProximityBomb(entity this);

void BecomeExplosion(entity this);

void spawn_touchblood(entity this, float damage, entity targ);

void W_Fireball_Attack(entity this, entity targ);
