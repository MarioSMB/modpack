#pragma once

bool autocvar_horde;

string autocvar_horde_test = "";

bool have_hordehub;

float horde_skill; // skill level at beginning of horde, saved to avoid tampering with top scores in other difficulties

int keys_silver; // number of silver keys the players are carrying
int keys_gold; // number of gold keys the players are carrying
int keys_platinum; // number of platinum keys the players are carrying

.float storednextthink;
.void(entity this) storedthink;
void Countdown(entity this);
void Wavecheck(entity this);
void SpawnAmmo(entity this);
.int wave; // what wave of the horde mode we're on
.int fodder; // how many fodder squads to spawn
.int elites; // how many elite squads to spawn
.int bosses; // how many bosses to spawn
.int spawncount; // number of monster spawns
.bool army; // Spawn Army? True/fallse
bool CheckBlockedSpawn(entity spawnpoint);

const int HORDE_TEAMSCORE_KILL = 1; // one point given to each player when a monster is killed

// spawnflags for info_horde_squad entities
const int HORDE_FODDER = BIT(0);
const int HORDE_ARMY = BIT(1);
const int HORDE_ELITE = BIT(2);
const int HORDE_BOSS = BIT(3);
const int HORDE_EASY = BIT(4);
const int HORDE_HARD = BIT(5);
const int HORDE_FINALBOSS = BIT(6); // unique to map entities, allows spawning a special monster on wave 9

bool key_spawned; // true/false, determine if key has already been spawned, prevent dupes.

const float SPAWN_RESET_TIME = 5; // amount of time that a spawn point is considered occupied and not valid for use

const float HORDE_START_DELAY = 10; // how long to wait before starting
const float HORDE_AMMO_RESPAWN_DELAY = 20; // how long between horde ammo spawns
//float horde;
.float hunger_time;
const float HUNGER_MAX = 10; // max delay between hunger pangs
const float HUNGER_MIN = 2.5; // min delay between hunger pangs

const float DEFAULT_POWERUP_CHANCE = 0.025;
const float POWERUP_CHANCE_GAIN = 0.025;
float powerup_chance;

entity horde_ent; // global horde manager so code can reference without lookup
void remote_wavecheck(entity this); // trigger wavecheck from outside the base entity

.string category; // to do find operations by type
string CATEGORY_MONSTER = "monster";

void horde_StartFrame();

string HordeRandomMap();

void horde_key_give_all(int key_item);

void horde_key_give(int key_item);

void horde_key_spend(float key_item);

bool qonquer_monstercompat(entity this, entity mon);

bool qonquer_ammoreplace(entity this);

bool qonquer_itemreplace(entity this);

void qonquer_fixdoor(entity this);

// Yoder Sept24, Horde Merge
void PrecacheMonsters();

void Horde_GiveScore(int score);

void RespawnAllPlayers();

IntrusiveList g_squads;
STATIC_INIT(g_squads) { g_squads = IL_NEW(); }
