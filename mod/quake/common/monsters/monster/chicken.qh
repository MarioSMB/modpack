#pragma once

#include "../all.qh"

MSG_INFO_NOTIF(DEATH_SELF_MON_CHICKEN,                 1,  2, 0, "s1 s2", "",        "",                     _("^BG%s%s^K1 was pecked by a Chicken"), "")
MSG_MULTI_NOTIF(DEATH_SELF_MON_CHICKEN,            1,  NULL,           INFO_DEATH_SELF_MON_CHICKEN,           CENTER_DEATH_SELF_MONSTER)
REGISTER_DEATHTYPE(MONSTER_CHICKEN,        DEATH_SELF_MON_CHICKEN,        DEATH_MURDER_MONSTER,           "monster")

#ifdef GAMEQC
MODEL(MON_CHICKEN, "progs/chicken.mdl");

SOUND(MON_CHICKEN_SIGHT, "chicken/sight");

SOUND(MON_CHICKEN_BOCK1, "chicken/fire");
SOUND(MON_CHICKEN_BOCK2, "chicken/random1");
SOUND(MON_CHICKEN_BOCK3, "chicken/random2");
SOUND(MON_CHICKEN_BOCK4, "chicken/random3");
SOUND(MON_CHICKEN_BOCK5, "chicken/sight");
SOUND(MON_CHICKEN_BOCK6, "chicken/pickup");
Sound SND_MON_CHICKEN_BOCK_RANDOM() {
    return REGISTRY_GET(Sounds, SND_MON_CHICKEN_BOCK1.m_id + floor(prandom() * 6));
}
#endif

CLASS(Chicken, Monster)
    ATTRIB(Chicken, spawnflags, int, 0);
    ATTRIB(Chicken, m_mins, vector, '-16 -16 -4');
    ATTRIB(Chicken, m_maxs, vector, '16 16 32');
#ifdef GAMEQC
    ATTRIB(Chicken, m_model, Model, MDL_MON_CHICKEN);
    ATTRIB(Chicken, m_sound, Sound, SND_MON_CHICKEN_SIGHT);
#endif
    ATTRIB(Chicken, netname, string, "chicken");
    ATTRIB(Chicken, m_name, string, _("Chicken"));
ENDCLASS(Chicken)

REGISTER_MONSTER(CHICKEN, NEW(Chicken));

#ifdef SVQC
void chicken_run1(entity this);
void chicken_walk1(entity this);
#endif
