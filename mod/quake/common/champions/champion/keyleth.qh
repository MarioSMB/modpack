#pragma once

#include "../all.qh"

#ifdef GAMEQC
MODEL(Keyleth, "progs/player_keyleth.mdl");

SOUND(Keyleth_Pain1, "player_keyleth/pain1");
SOUND(Keyleth_Pain2, "player_keyleth/pain2");
SOUND(Keyleth_Pain3, "player_keyleth/pain3");
Sound SND_Keyleth_Pain_Random() {
    return REGISTRY_GET(Sounds, SND_Keyleth_Pain1.m_id + rint(random() * 2));
}

SOUND(Keyleth_Death1, "player_keyleth/death1");
SOUND(Keyleth_Death2, "player_keyleth/death2");
SOUND(Keyleth_Death3, "player_keyleth/death3");
SOUND(Keyleth_Death4, "player_keyleth/death4");
Sound SND_Keyleth_Death_Random() {
    return REGISTRY_GET(Sounds, SND_Keyleth_Death1.m_id + rint(random() * 3));
}

SOUND(Keyleth_Healing, "ambience/pixels");

PRECACHE(Keyleth)
{
#ifdef CSQC
    precache_pic("gfx/quake/katria_face_invis");
    precache_pic("gfx/quake/katria_face_invul2");
    precache_pic("gfx/quake/katria_face_inv2");
    precache_pic("gfx/quake/katria_face_quad");

    precache_pic("gfx/quake/katria_face1");
    precache_pic("gfx/quake/katria_face_p1");
    precache_pic("gfx/quake/katria_face2");
    precache_pic("gfx/quake/katria_face_p2");
    precache_pic("gfx/quake/katria_face3");
    precache_pic("gfx/quake/katria_face_p3");
    precache_pic("gfx/quake/katria_face4");
    precache_pic("gfx/quake/katria_face_p4");
    precache_pic("gfx/quake/katria_face5");
    precache_pic("gfx/quake/katria_face_p5");
#endif
#ifdef SVQC
    precache_sound("player_keyleth/plyrjmp8.wav");       // player jump
    precache_sound("player_keyleth/land.wav");           // player landing
    precache_sound("player_keyleth/land2.wav");      // player hurt landing
    precache_sound("player_keyleth/drown1.wav");     // drowning pain
    precache_sound("player_keyleth/drown2.wav");     // drowning pain
    precache_sound("player_keyleth/gasp1.wav");      // gasping for air
    precache_sound("player_keyleth/gasp2.wav");      // taking breath
    precache_sound("player_keyleth/h2odeath.wav");       // drowning death

    precache_sound("player_keyleth/pain1.wav");
    precache_sound("player_keyleth/pain2.wav");
    precache_sound("player_keyleth/pain3.wav");

    precache_sound("player_keyleth/death1.wav");
    precache_sound("player_keyleth/death2.wav");
    precache_sound("player_keyleth/death3.wav");
    precache_sound("player_keyleth/death4.wav");

    precache_sound("player_keyleth/axhit1.wav");
    precache_sound("player_keyleth/axhit2.wav");

    precache_sound("player_keyleth/lburn1.wav");     // lava burn
    precache_sound("player_keyleth/lburn2.wav");     // lava burn

    precache_sound("player_keyleth/start.wav");

    precache_sound("demon/dhit2.wav");

    precache_model("progs/v_keypunch.mdl");
#endif
}
#endif
#ifdef CSQC
#define KEYLETH_STATS \
"Press %ABILITY% to transform\n" \
"Moves 10% faster\n" \
"Jumps 15% higher\n" \
"Has Mushroom as a weapon\n" \
"Attracts nearby enemies\n" \
"Heals a little if touched"
#endif
CLASS(Keyleth, Champions)
    ATTRIB(Keyleth, netname, string, "keyleth");
    ATTRIB(Keyleth, m_name, string, "Keyleth");
    ATTRIB(Keyleth, m_viewofs, vector, '0 0 30');
    ATTRIB(Keyleth, qcc_movespeed, float, 1.1);
    ATTRIB(Keyleth, qcc_jumpheight, float, 1.15);
    ATTRIB(Keyleth, qcc_meleename, string, "keypunch");
#ifdef GAMEQC
    ATTRIB(Keyleth, m_model, Model, MDL_Keyleth);
    ATTRIB(Keyleth, m_model_head, Model, MDL_Null);
    ATTRIB(Keyleth, m_soundpath, string, "player_keyleth/");
    METHOD(Keyleth, m_sound_pain, string()) { return SND(Keyleth_Pain_Random()); }
    METHOD(Keyleth, m_sound_death, string()) { return SND(Keyleth_Death_Random()); }
    METHOD(Keyleth, m_sound_jump, string()) { return "player_keyleth/plyrjmp8.wav"; }
#endif
#ifdef CSQC
    ATTRIB(Keyleth, m_faceprefix, string, "gfx/quake/katria_");
#endif
#ifdef CSQC
    ATTRIB(Keyleth, message, string, KEYLETH_STATS);
#endif
ENDCLASS(Keyleth)
REGISTER_CHAMPION(Keyleth, NEW(Keyleth));

#ifdef SVQC
.float keyleth_particletime;
.bool keyleth_cannon;

.float keyleth_healing;
#endif
