#pragma once

#include "../all.qh"

#ifdef GAMEQC
MODEL(Poop, "progs/player_poop.mdl");

SOUND(Poop_Pain1, "player_poop/pain1");
SOUND(Poop_Pain2, "player_poop/pain2");
SOUND(Poop_Pain3, "player_poop/pain3");
SOUND(Poop_Pain4, "player_poop/pain4");
Sound SND_Poop_Pain_Random() {
    return REGISTRY_GET(Sounds, SND_Poop_Pain1.m_id + floor(prandom() * 4));
}

SOUND(Poop_Death1, "player_poop/death1");
SOUND(Poop_Death2, "player_poop/death2");
SOUND(Poop_Death3, "player_poop/death3");
Sound SND_Poop_Death_Random() {
    return REGISTRY_GET(Sounds, SND_Poop_Death1.m_id + floor(prandom() * 3));
}
PRECACHE(Poop)
{
#ifdef CSQC
    precache_pic("gfx/quake/poop_face");
#endif
#ifdef SVQC
    precache_sound("player_poop/plyrjmp8.wav");       // player jump
    precache_sound("player_poop/land.wav");           // player landing
    precache_sound("player_poop/land2.wav");      // player hurt landing
    precache_sound("player_poop/drown1.wav");     // drowning pain
    precache_sound("player_poop/drown2.wav");     // drowning pain
    precache_sound("player_poop/gasp1.wav");      // gasping for air
    precache_sound("player_poop/gasp2.wav");      // taking breath
    precache_sound("player_poop/h2odeath.wav");       // drowning death

    precache_sound("player_poop/pain1.wav");
    precache_sound("player_poop/pain2.wav");
    precache_sound("player_poop/pain3.wav");

    precache_sound("player_poop/death1.wav");
    precache_sound("player_poop/death2.wav");

    precache_sound("player_poop/axhit1.wav");

    precache_sound("player_poop/lburn1.wav");     // lava burn
    precache_sound("player_poop/lburn2.wav");     // lava burn

    precache_sound("player_poop/start.wav");

    precache_model("progs/s_mayo.mdl");
#endif
}
#endif
#ifdef CSQC
#define POOP_STATS \
"Better hold it in"
#endif
CLASS(Poop, Champions)
    ATTRIB(Poop, netname, string, "poop");
    ATTRIB(Poop, m_name, string, "Poop Head");
    ATTRIB(Poop, qcc_pogo, bool, true);
    ATTRIB(Poop, m_hidden, bool, true);
#ifdef GAMEQC
    ATTRIB(Poop, m_model, Model, MDL_Poop);
    ATTRIB(Poop, m_model_head, Model, MDL_Null);
    ATTRIB(Poop, m_soundpath, string, "player_poop/");
    METHOD(Poop, m_sound_pain, string()) { return SND(Poop_Pain_Random()); }
    METHOD(Poop, m_sound_death, string()) { return SND(Poop_Death_Random()); }
#endif
#ifdef CSQC
    ATTRIB(Poop, message, string, POOP_STATS);
#endif
ENDCLASS(Poop)
REGISTER_CHAMPION(Poop, NEW(Poop));

#ifdef SVQC
.bool poop_cannon;

.float poop_particletime;
#endif
