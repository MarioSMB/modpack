#pragma once

#include "../all.qh"

#ifdef GAMEQC
MODEL(Duck, "progs/player_duck.mdl");

SOUND(Duck_Pain1, "player_duck/pain1");
SOUND(Duck_Pain2, "player_duck/pain2");
SOUND(Duck_Pain3, "player_duck/pain3");
SOUND(Duck_Pain4, "player_duck/pain4");
SOUND(Duck_Pain5, "player_duck/pain5");
SOUND(Duck_Pain6, "player_duck/pain6");
Sound SND_Duck_Pain_Random() {
    return REGISTRY_GET(Sounds, SND_Duck_Pain1.m_id + rint(random() * 5));
}

SOUND(Duck_Death1, "player_duck/death1");
SOUND(Duck_Death2, "player_duck/death2");
SOUND(Duck_Death3, "player_duck/death3");
SOUND(Duck_Death4, "player_duck/death4");
SOUND(Duck_Death5, "player_duck/death5");
Sound SND_Duck_Death_Random() {
    return REGISTRY_GET(Sounds, SND_Duck_Death1.m_id + rint(random() * 4));
}

MODEL(Grape, "progs/grape.mdl");
PRECACHE(Duck)
{
#ifdef CSQC
    precache_pic("gfx/quake/duck_face");
#endif
#ifdef SVQC
    precache_sound("player_duck/plyrjmp8.wav");       // player jump
    precache_sound("player_duck/land.wav");           // player landing
    precache_sound("player_duck/land2.wav");      // player hurt landing
    precache_sound("player_duck/drown1.wav");     // drowning pain
    precache_sound("player_duck/drown2.wav");     // drowning pain
    precache_sound("player_duck/gasp1.wav");      // gasping for air
    precache_sound("player_duck/gasp2.wav");      // taking breath
    precache_sound("player_duck/h2odeath.wav");       // drowning death

    precache_sound("player_duck/pain1.wav");
    precache_sound("player_duck/pain2.wav");
    precache_sound("player_duck/pain3.wav");
    precache_sound("player_duck/pain4.wav");
    precache_sound("player_duck/pain5.wav");
    precache_sound("player_duck/pain6.wav");

    precache_sound("player_duck/death1.wav");
    precache_sound("player_duck/death2.wav");
    precache_sound("player_duck/death3.wav");
    precache_sound("player_duck/death4.wav");
    precache_sound("player_duck/death5.wav");

    precache_sound("player_duck/axhit1.wav");

    precache_sound("player_duck/lburn1.wav");     // lava burn
    precache_sound("player_duck/lburn2.wav");     // lava burn

    precache_sound("player_duck/start.wav");
    precache_sound("player_duck/attack.wav");

    precache_sound("weapons/grape_impact.wav");
#endif
}
#endif
CLASS(Duck, Champions)
    ATTRIB(Duck, netname, string, "duck");
    ATTRIB(Duck, m_name, string, "Duck");
    ATTRIB(Duck, m_viewofs, vector, '0 0 20');
    ATTRIB(Duck, qcc_swimspeed, float, 5);
    ATTRIB(Duck, m_hidden, bool, true);
#ifdef GAMEQC
    ATTRIB(Duck, m_model, Model, MDL_Duck);
    ATTRIB(Duck, m_model_head, Model, MDL_Null);
    ATTRIB(Duck, m_soundpath, string, "player_duck/");
    METHOD(Duck, m_sound_pain, string()) { return SND(Duck_Pain_Random()); }
    METHOD(Duck, m_sound_death, string()) { return SND(Duck_Death_Random()); }
#endif
#ifdef CSQC
    ATTRIB(Duck, message, string, "Got any grapes?");
#endif
ENDCLASS(Duck)
REGISTER_CHAMPION(Duck, NEW(Duck));

#ifdef SVQC
string autocvar_sv_allow_customplayermodels_ducklist = "";

.bool duck_cannon;
#endif
