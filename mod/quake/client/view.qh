#pragma once

bool autocvar_camera_chase_smoothly;
bool autocvar_camera_enable;
bool autocvar_camera_forward_follows;
bool autocvar_camera_free;
float autocvar_camera_look_attenuation;
float autocvar_camera_look_player;
float autocvar_camera_mouse_threshold;
bool autocvar_camera_reset;
float autocvar_camera_speed_attenuation;
float autocvar_camera_speed_chase;
float autocvar_camera_speed_free;
float autocvar_camera_speed_roll;

entity viewmodels[MAX_WEAPONSLOTS];

void HUD_CenterPrint ();

bool cursor_active;

float drawframetime;

float intermission_time;

int vid_width, vid_height;
float vid_pixelheight;

float autocvar_vid_conwidth;
float autocvar_vid_conheight;
float autocvar_vid_pixelheight;

//float autocvar_cl_eventchase_distance = 140;
float autocvar_cl_eventchase_speed = 1.3;
vector autocvar_cl_eventchase_maxs = '12 12 8';
vector autocvar_cl_eventchase_mins = '-12 -12 -8';
//vector autocvar_cl_eventchase_viewoffset = '0 0 20';

bool autocvar_r_drawviewmodel;
vector autocvar_cl_gunoffset;

float autocvar_menu_mouse_speed;

vector viewloc_mousepos;

float autocvar__menu_alpha; // updated by the menu VM, useful to tell when the menu is being drawn

float contentavgalpha, liquidalpha_prev;
vector liquidcolor_prev;

.Weapon last_switchweapon;

void CSQC_Demo_Camera();

// TODO: item pickup flashing? maybe not (seizure fest)
// requires some kind of stat
bool autocvar_hud_contents;
float autocvar_hud_contents_fadeintime = 0.02;
float autocvar_hud_contents_fadeouttime = 0.1;
float autocvar_hud_contents_lava_alpha = 0.7;
vector autocvar_hud_contents_lava_color = '0.8 0.1 0';
float autocvar_hud_contents_slime_alpha = 0.7;
vector autocvar_hud_contents_slime_color = '0 0.4 0.1';
float autocvar_hud_contents_water_alpha = 0.5;
vector autocvar_hud_contents_water_color = '0.4 0.3 0.3';
