#include "exp.qh"

#include "stats.qh"
#include "../subs/subs.qh"

float LvlForExp(float exponent)
{	
	return sqrt(exponent/80) + 1;
}

float ExpForLevel(float lvel)
{
	return (lvel * lvel) * 80;
}

float GiveExp(entity att, entity targ, float expu)
{
	float e = 1;
	if(att.health < 1)
		return 0;
	if(expu <= 0)
		return 0;

	if(IS_CLIENT(att) && (expu == targ.experience))
	{
		entity f = find(world, classname, "dummy");
		while(f)
		{
			if(att != f.owner)
				if(friendly(att.player, f))
					GiveExp(f.owner, targ, expu * 0.5);
			f = find(f, classname, "dummy");
		}
	}
	if(att.player.sbarsub)
		GiveExp(att.player.sbarsub.owner, targ, expu);
	if(targ)
	{
		e = 1 - (att.lvl - targ.lvl) * 0.1;
	
		if(e < 0)
			e = 0;
		else if(e > 1)
			e = 1;
	}
	if(IS_CLIENT(targ))
		e = 10;
	else
		e *= expu;
		
	if(att.skill & SKILL_EXPERIENCE)
		e = e + e * (att.title_x + 1) / 6;
	e = ceil(e);
	
	if((att.experience + e) < 800000)
	{
		att.experience = att.experience + e;
		if(att.options & OPT_VERBOSE)
		{
			sprint(att, strcat("You gain ", ftos(e), " experience\n"));
		}		
	}
	else
		att.experience = 800000;
	while((att.experience >= ExpForLevel(att.lvl)) && (att.lvl <= MAX_CHAR_LEVEL))
	{
		
		// fix autogenerated stats
		Unstat(att);
		att.lvl = att.lvl + 1;
		Restat(att);
		
		att.health = att.max_health;
		att.mana = att.max_mana; // whee!
		att.options = att.options - (att.options & OPT_SEEN_PTD);
		
		if(att.netname)
		{
			bprint(strcat(att.netname, " has advanced to level ", ftos(att.lvl), "\n"));
			_sound(att, CHAN_AUTO, "player/levelup.wav", 1, ATTN_NONE);
		}
		att.ptd = att.ptd + 5;
		if(att.ptd > 127)
			att.ptd = 127;
	}
	return e;
}
