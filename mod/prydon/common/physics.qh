#pragma once

.vector view_ofs;

.float pm_frametime;

#ifdef CSQC
	.float watertype;
	.float waterlevel;

	.vector movement;
	.vector v_angle;

	.vector movedir; // TODO?
#endif

#ifdef SVQC
	.bool move_qcphysics;
#endif

.float teleport_time;

// button mapping
#define PHYS_INPUT_BUTTON_ATCK(s)           PHYS_INPUT_BUTTON_BUTTON1(s)
#define PHYS_INPUT_BUTTON_JUMP(s)           PHYS_INPUT_BUTTON_BUTTON2(s)
#define PHYS_INPUT_BUTTON_ATCK2(s)          PHYS_INPUT_BUTTON_BUTTON3(s)
#define PHYS_INPUT_BUTTON_ZOOM(s)           PHYS_INPUT_BUTTON_BUTTON4(s)
#define PHYS_INPUT_BUTTON_CROUCH(s)         PHYS_INPUT_BUTTON_BUTTON5(s)
#define PHYS_INPUT_BUTTON_HOOK(s)           PHYS_INPUT_BUTTON_BUTTON6(s)

#define IS_JUMP_HELD(s)                     (!((s).flags & FL_JUMPRELEASED))
#define SET_JUMP_HELD(s)                    ((s).flags &= ~FL_JUMPRELEASED)
#define UNSET_JUMP_HELD(s)                  ((s).flags |= FL_JUMPRELEASED)

#define PHYS_PL_MAX(s)						STAT(PL_MAX, s)
#define PHYS_PL_MIN(s)						STAT(PL_MIN, s)
#define PHYS_PL_CROUCH_MAX(s)				STAT(PL_CROUCH_MAX, s)
#define PHYS_PL_CROUCH_MIN(s)				STAT(PL_CROUCH_MIN, s)

#define PHYS_PL_VIEWOFS(s)					STAT(PL_VIEW_OFS, s)
#define PHYS_PL_CROUCH_VIEWOFS(s)			STAT(PL_CROUCH_VIEW_OFS, s)

#define PHYS_VIEWHEIGHT(s)					STAT(VIEWHEIGHT, s)

// quake specific stats
#define PHYS_WATERFRICTION(s)               STAT(MOVEVARS_FRICTION_WATER, s)
#define PHYS_WATERACCELERATE(s)             STAT(MOVEVARS_WATERACCELERATE, s)
#define PHYS_EDGEFRICTION(s)                STAT(MOVEVARS_FRICTION_EDGE, s)

// physics stats
#define PHYS_ACCELERATE(s)                  STAT(MOVEVARS_ACCELERATE, s)
#define PHYS_AIRACCELERATE(s)               STAT(MOVEVARS_AIRACCELERATE, s)
#define PHYS_AIRACCEL_QW(s)                 STAT(MOVEVARS_AIRACCEL_QW, s)
#define PHYS_AIRACCEL_QW_STRETCHFACTOR(s)   STAT(MOVEVARS_AIRACCEL_QW_STRETCHFACTOR, s)
#define PHYS_AIRACCEL_SIDEWAYS_FRICTION(s)  STAT(MOVEVARS_AIRACCEL_SIDEWAYS_FRICTION, s)
#define PHYS_AIRCONTROL(s)                  STAT(MOVEVARS_AIRCONTROL, s)
#define PHYS_AIRCONTROL_PENALTY(s)          STAT(MOVEVARS_AIRCONTROL_PENALTY, s)
#define PHYS_AIRCONTROL_POWER(s)            STAT(MOVEVARS_AIRCONTROL_POWER, s)
#define PHYS_AIRCONTROL_BACKWARDS(s)        STAT(MOVEVARS_AIRCONTROL_BACKWARDS, s)
#define PHYS_AIRCONTROL_SIDEWARDS(s)        STAT(MOVEVARS_AIRCONTROL_SIDEWARDS, s)
#define PHYS_AIRSPEEDLIMIT_NONQW(s)         STAT(MOVEVARS_AIRSPEEDLIMIT_NONQW, s)
#define PHYS_AIRSTOPACCELERATE(s)           STAT(MOVEVARS_AIRSTOPACCELERATE, s)
#define PHYS_AIRSTRAFEACCELERATE(s)         STAT(MOVEVARS_AIRSTRAFEACCELERATE, s)
#define PHYS_AIRSTRAFEACCEL_QW(s)           STAT(MOVEVARS_AIRSTRAFEACCEL_QW, s)

#define PHYS_FRICTION(s)                    STAT(MOVEVARS_FRICTION, s)

#define PHYS_JUMPVELOCITY(s)                STAT(MOVEVARS_JUMPVELOCITY, s)

#define PHYS_MAXAIRSPEED(s)                 STAT(MOVEVARS_MAXAIRSPEED, s)
#define PHYS_MAXAIRSTRAFESPEED(s)           STAT(MOVEVARS_MAXAIRSTRAFESPEED, s)
#define PHYS_MAXSPEED(s)                    STAT(MOVEVARS_MAXSPEED, s)

#define PHYS_STOPSPEED(s)                   STAT(MOVEVARS_STOPSPEED, s)

#define PHYS_TRACK_CANJUMP(s)               STAT(MOVEVARS_TRACK_CANJUMP, s)

#define PHYS_WARSOWBUNNY_ACCEL(s)           STAT(MOVEVARS_WARSOWBUNNY_ACCEL, s)
#define PHYS_WARSOWBUNNY_AIRFORWARDACCEL(s) STAT(MOVEVARS_WARSOWBUNNY_AIRFORWARDACCEL, s)
#define PHYS_WARSOWBUNNY_BACKTOSIDERATIO(s) STAT(MOVEVARS_WARSOWBUNNY_BACKTOSIDERATIO, s)
#define PHYS_WARSOWBUNNY_TOPSPEED(s)        STAT(MOVEVARS_WARSOWBUNNY_TOPSPEED, s)
#define PHYS_WARSOWBUNNY_TURNACCEL(s)       STAT(MOVEVARS_WARSOWBUNNY_TURNACCEL, s)

#ifdef CSQC

	#define PHYS_HEALTH(s)						STAT(HEALTH, s)

	#define IS_DEAD(s)                          (((s).classname == "ENT_CLIENT_MODEL") ? (s).csqcmodel_isdead : ((s).health <= 0))

	#define PHYS_INPUT_ANGLES(s)                input_angles
// TODO
	#define PHYS_WORLD_ANGLES(s)                input_angles

	#define IS_DUCKED(s)                        (boolean((s).flags & FL_DUCKED))
	#define SET_DUCKED(s)                       ((s).flags |= FL_DUCKED)
	#define UNSET_DUCKED(s)                     ((s).flags &= ~FL_DUCKED)

	#define PHYS_INPUT_TIMELENGTH               input_timelength
	#define PHYS_INPUT_FRAMETIME                serverdeltatime

	#define PHYS_INPUT_MOVEVALUES(s)            input_movevalues

	#define PHYS_INPUT_BUTTON_BUTTON1(s)        boolean(input_buttons & BIT(0))
	#define PHYS_INPUT_BUTTON_BUTTON2(s)        boolean(input_buttons & BIT(1))
	#define PHYS_INPUT_BUTTON_BUTTON3(s)        boolean(input_buttons & BIT(2))
	#define PHYS_INPUT_BUTTON_BUTTON4(s)        boolean(input_buttons & BIT(3))
	#define PHYS_INPUT_BUTTON_BUTTON5(s)        boolean(input_buttons & BIT(4))
	#define PHYS_INPUT_BUTTON_BUTTON6(s)        boolean(input_buttons & BIT(5))
	#define PHYS_INPUT_BUTTON_BUTTON7(s)        boolean(input_buttons & BIT(6))
	#define PHYS_INPUT_BUTTON_BUTTON8(s)        boolean(input_buttons & BIT(7))
	#define PHYS_INPUT_BUTTON_BUTTON_USE(s)     boolean(input_buttons & BIT(8))
	#define PHYS_INPUT_BUTTON_BUTTON_CHAT(s)    boolean(input_buttons & BIT(9))
	#define PHYS_INPUT_BUTTON_BUTTON_PRYDON(s)  boolean(input_buttons & BIT(10))
	#define PHYS_INPUT_BUTTON_BUTTON9(s)        boolean(input_buttons & BIT(11))
	#define PHYS_INPUT_BUTTON_BUTTON10(s)       boolean(input_buttons & BIT(12))
	#define PHYS_INPUT_BUTTON_BUTTON11(s)       boolean(input_buttons & BIT(13))
	#define PHYS_INPUT_BUTTON_BUTTON12(s)       boolean(input_buttons & BIT(14))
	#define PHYS_INPUT_BUTTON_BUTTON13(s)       boolean(input_buttons & BIT(15))
	#define PHYS_INPUT_BUTTON_BUTTON14(s)       boolean(input_buttons & BIT(16))
	#define PHYS_INPUT_BUTTON_BUTTON15(s)       boolean(input_buttons & BIT(17))
	#define PHYS_INPUT_BUTTON_BUTTON16(s)       boolean(input_buttons & BIT(18))

#elif defined(SVQC)

	#define PHYS_HEALTH(s)						((s).health)

	#define PHYS_INPUT_ANGLES(s)                ((s).v_angle)
	#define PHYS_WORLD_ANGLES(s)                ((s).angles)

	.bool crouch;
	#define IS_DUCKED(s)                        ((s).crouch)
	#define SET_DUCKED(s)                       ((s).crouch = true)
	#define UNSET_DUCKED(s)                     ((s).crouch = false)

	#define PHYS_INPUT_TIMELENGTH               frametime
	#define PHYS_INPUT_FRAMETIME                sys_frametime

	#define PHYS_INPUT_MOVEVALUES(s)            ((s).movement)

	#define PHYS_INPUT_BUTTON_BUTTON1(s)        ((s).button0)
	#define PHYS_INPUT_BUTTON_BUTTON2(s)        ((s).button2)
	#define PHYS_INPUT_BUTTON_BUTTON3(s)        ((s).button3)
	#define PHYS_INPUT_BUTTON_BUTTON4(s)        ((s).button4)
	#define PHYS_INPUT_BUTTON_BUTTON5(s)        ((s).button5)
	#define PHYS_INPUT_BUTTON_BUTTON6(s)        ((s).button6)
	#define PHYS_INPUT_BUTTON_BUTTON7(s)        ((s).button7)
	#define PHYS_INPUT_BUTTON_BUTTON8(s)        ((s).button8)
	#define PHYS_INPUT_BUTTON_BUTTON_USE(s)     ((s).buttonuse)
	#define PHYS_INPUT_BUTTON_BUTTON_CHAT(s)    ((s).buttonchat)
	#define PHYS_INPUT_BUTTON_BUTTON_PRYDON(s)  ((s).cursor_active)
	#define PHYS_INPUT_BUTTON_BUTTON9(s)        ((s).button9)
	#define PHYS_INPUT_BUTTON_BUTTON10(s)       ((s).button10)
	#define PHYS_INPUT_BUTTON_BUTTON11(s)       ((s).button11)
	#define PHYS_INPUT_BUTTON_BUTTON12(s)       ((s).button12)
	#define PHYS_INPUT_BUTTON_BUTTON13(s)       ((s).button13)
	#define PHYS_INPUT_BUTTON_BUTTON14(s)       ((s).button14)
	#define PHYS_INPUT_BUTTON_BUTTON15(s)       ((s).button15)
	#define PHYS_INPUT_BUTTON_BUTTON16(s)       ((s).button16)

#endif
